apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: terraform-deploy-
spec:
  entrypoint: main
  templates:
  - name: main
    steps:
    - - name: clone-repo
        template: git-clone
    - - name: verify-repo
        template: verify-repo
    - - name: terraform-init
        template: terraform
        arguments:
          parameters:
          - name: command
            value: init
    - - name: terraform-apply
        template: terraform
        arguments:
          parameters:
          - name: command
            value: apply -auto-approve

  - name: git-clone
    container:
      image: alpine/git
      command: ["/bin/sh", "-c"]
      args:
        - |
          git clone https://Rawoof-Abdul:Raw%40021192@github.com/Rawoof-Abdul/terraform-new.git /workspace && \
          ls -al /workspace
      volumeMounts:
      - name: workspace
        mountPath: /workspace
    volumes:
    - name: workspace
      emptyDir: {}

  - name: verify-repo
    container:
      image: busybox
      command: ["/bin/sh", "-c"]
      args:
        - |
          echo "Verifying contents of /workspace:" && \
          ls -al /workspace && \
          echo "Contents verified."
      volumeMounts:
      - name: workspace
        mountPath: /workspace
    volumes:
    - name: workspace
      emptyDir: {}

  - name: terraform
    inputs:
      parameters:
      - name: command
    container:
      image: hashicorp/terraform:light
      command: ["/bin/sh", "-c"]
      args:
        - |
          echo "Checking Terraform command availability:" && \
          which terraform && \
          terraform version && \
          echo "Terraform command is available. Proceeding with ${command}" && \
          echo "Working directory before change: $(pwd)" && \
          cd /workspace && \
          echo "Working directory after change: $(pwd)" && \
          echo "Contents of /workspace:" && \
          ls -al && \
          echo "Environment variables:" && \
          env && \
          echo "Running terraform ${command}" && \
          terraform ${command} || echo "Terraform command failed with exit code $?" && \
          echo "Terraform ${command} completed"
      volumeMounts:
      - name: workspace
        mountPath: /workspace
      - name: aws-secret
        mountPath: /root/.aws
        subPath: aws-secret
    volumes:
    - name: workspace
      emptyDir: {}
    - name: aws-secret
      secret:
        secretName: aws-secret
